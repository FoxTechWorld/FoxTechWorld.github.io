<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on FoxTechWorld</title>
    <link>https://foxtechword.github.io/posts/</link>
    <description>Recent content in Posts on FoxTechWorld</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-BR</language>
    <copyright>KitsuneSemCalda (CC BY 4.0)</copyright>
    <lastBuildDate>Mon, 15 Sep 2025 08:24:12 -0300</lastBuildDate>
    <atom:link href="https://foxtechword.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Busca em Largura e Busca em profundidade</title>
      <link>https://foxtechword.github.io/posts/algortimos/bfs_dfs/</link>
      <pubDate>Mon, 15 Sep 2025 08:24:12 -0300</pubDate>
      <guid>https://foxtechword.github.io/posts/algortimos/bfs_dfs/</guid>
      <description>&lt;h2 id=&#34;o-que-são-grafos&#34;&gt;O que são Grafos?&lt;/h2&gt;&#xA;&lt;p&gt;Grafos são um ramo da matemática que estuda &lt;em&gt;relações&lt;/em&gt; entre objetos pertencentes a um determinado conjunto.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Você pode pensar por exemplo que &lt;/p&gt;&#xA;$$\{a, b\}$$&lt;p&gt; é um grafo que leva de a para b.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Historicamente, foi &lt;code&gt;Leonhard Euler&lt;/code&gt;, mesmo criador da identidade de Euler.&lt;/p&gt;&#xA;$$E^{i\pi} + 1 = 0$$&lt;p&gt;Publicou em 1736 um artigo sobre o problema das sete pontes de Königsberg.&lt;/p&gt;&#xA;&lt;p&gt;E este foi considerado o ponto de partida da teoria dos grafos.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="o-que-são-grafos">O que são Grafos?</h2>
<p>Grafos são um ramo da matemática que estuda <em>relações</em> entre objetos pertencentes a um determinado conjunto.</p>
<blockquote>
<p>Você pode pensar por exemplo que </p>
$$\{a, b\}$$<p> é um grafo que leva de a para b.</p></blockquote>
<p>Historicamente, foi <code>Leonhard Euler</code>, mesmo criador da identidade de Euler.</p>
$$E^{i\pi} + 1 = 0$$<p>Publicou em 1736 um artigo sobre o problema das sete pontes de Königsberg.</p>
<p>E este foi considerado o ponto de partida da teoria dos grafos.</p>
<h3 id="onde-grafos-são-usados">Onde grafos são usados?</h3>
<p>Dentro da computação em todo lugar diretamente ou indiretamente.</p>
<ul>
<li>Redes Neurais</li>
<li>Estrutura de árvores</li>
<li>Rede de computadores</li>
<li>Computação Gráfica</li>
<li>Redes Sociais</li>
</ul>
<p>Se precisa de coordenação provavelmente vai ter um grafo incluso.</p>
<p>Fica ainda mais interessante porque <code>Linguagens Formais e Automatos</code>.</p>
<p>Fundamental para a construções de linguagens (programação, regular, marcação).</p>
<p>Também usa grafos como estrutura de representação para automatos e diagramas de transição</p>
<h2 id="algoritmos-de-busca">Algoritmos de Busca</h2>
<p>Como um grafo é formado por relações, contendo ou não um direcionamento.</p>
<p>É necessário sob algum critério percorrer esse grafo.</p>
<p>E para isso temos um problema essencial que precisa ser resolvido.</p>
<h3 id="qual-critério">Qual critério?</h3>
<p>Normalmente ou estamos trabalhando com grafos esparsos ou grafos densos.</p>
<p>Sendo grafos esparsos aqueles que tem poucas arestas em relação ao número de vértices.</p>
<p>E grafos densos aqueles que tem muitas arestas.</p>
<p>Essa caracteristica influência diretamente a escolha do algoritmo de busca mais eficiente.</p>
<p>Os dois algoritmos mais clássicos para essa busca são:</p>
<ul>
<li>(BFS - Breadth First Search): Busca em Largura.</li>
<li>(DFS - Depth First Search): Busca em profundidade.</li>
</ul>
<h2 id="algoritmos">Algoritmos</h2>
<h3 id="busca-em-largura-bfs">Busca em Largura (BFS)</h3>
<p>O algoritmo de busca em largura explora nível por nível.</p>
<p>Ou seja se pensarmos em uma árvore.</p>
<p>Ele verificaria primeiros os vizinhos da raiz.</p>
<p>Depois os vizinhos dos vizinhos da raiz e por assim vai.</p>
<p>Para fazer isso a gente utiliza uma estrutura de dados fila/queue.</p>
<h4 id="propriedades-da-busca-em-largura">Propriedades da busca em largura</h4>
<ul>
<li>
<p>Se existir uma solução, este algoritmo consegue encontrar.</p>
</li>
<li>
<p>Ótimo em arestas unitárias vai encontrar o caminho mais curto em termo de números de passos.</p>
</li>
<li>
<p>Complexidade:</p>
</li>
<li>
<p>Vai ter o tempo de percorrer </p>
$$O(V + E)$$<p> ou seja o tempo para percorrer todos os vertices e arestas.</p>
</li>
<li>
<p>Espaço: </p>
$$O(V)$$<p> porque precisa armazenar a fila e o conjunto de visitados.</p>
</li>
</ul>
<h4 id="lógica-passo-a-passo">Lógica passo a passo</h4>
<ol>
<li>Colocamos um nó na fila, e marcamos como visitado.</li>
<li>Enquanto a fila não estiver vazia:</li>
</ol>
<ul>
<li>Retiramos o primeiro elemento.</li>
<li>Visitamos todos os vizinhos não visitados do nó.</li>
<li>Adicionamos esses vizinhos a fila e marcamos como visitados.</li>
</ul>
<h3 id="busca-em-profundidade">Busca em Profundidade</h3>
<p>A busca em profundidade em comparação explora todo um ramo do grafo até o fim antes de voltar e explorar outros ramos.</p>
<p>Ao contrário da busca em largura, aqui usamos pilha/stack (Last In, First Out).</p>
<h4 id="propriedades-da-busca-em-profundidade">Propriedades da busca em profundidade</h4>
<ul>
<li>
<p>Completo? Em grafos finitos mas, não garante o caminho mais curto em grafos não ponderados.</p>
</li>
<li>
<p>Ótimo? Não, não é adequado quando você precisa do menor número de arestas.</p>
</li>
<li>
<p>Complexidade:</p>
<ul>
<li>Tempo: $$O(V + E)$$</li>
<li>Espaço: $$O(V)$$</li>
</ul>
</li>
<li>
<p>Risco Prático em recursão pode estourar a pilha em grafos muito profundos, prefira uma versão iterativa.</p>
</li>
</ul>
<h4 id="lógica-passo-a-passo-1">Lógica passo a passo</h4>
<ol>
<li>Marca o nó inicial como visitado e entre nele.</li>
<li>Para cada vizinho não visitado, repita o processo.</li>
<li>Quando o nó não tem vizinhos não visitados, realize um backtrack.</li>
<li>Continue até visitar todos os nós alcançáveis.</li>
</ol>
<h3 id="conclusão">Conclusão</h3>
<p>Não existe um algoritmo universalmente “melhor”: tudo depende do objetivo.</p>
<p>BFS (Busca em Largura):</p>
<ul>
<li>
<p>Garante o menor caminho em grafos não ponderados.</p>
</li>
<li>
<p>Mais indicado quando o problema exige a solução mais curta.</p>
</li>
</ul>
<p>DFS (Busca em Profundidade):</p>
<ul>
<li>
<p>Útil para exploração completa, detecção de ciclos, ordenação topológica e backtracking.</p>
</li>
<li>
<p>Mais indicado quando queremos percorrer toda a estrutura ou analisar propriedades do grafo.</p>
</li>
</ul>
<p>Ambos têm mesma complexidade assintótica </p>
$$
O(V+E)$$<p> mas, se aplicam a cenários distintos.</p>
<p>E devem ser tratados com cautela para não escolher a pior opção por puro achismo.</p>
<p>Ademas, espero que tenham gostado do post e valeu</p>
]]></content:encoded>
    </item>
    <item>
      <title>Bem Vindos ao FoxTechWorld!</title>
      <link>https://foxtechword.github.io/posts/bem_vindos/</link>
      <pubDate>Sun, 14 Sep 2025 20:02:00 -0300</pubDate>
      <guid>https://foxtechword.github.io/posts/bem_vindos/</guid>
      <description>&lt;h2 id=&#34;bem-vindos-ao-foxtechworld&#34;&gt;Bem vindos ao FoxTechWorld&lt;/h2&gt;&#xA;&lt;p&gt;Este é um pequeno blog feito para distribuir conteúdo &lt;a href=&#34;https://vaporhole.xyz/~kitsune&#34;&gt;nérdico&lt;/a&gt;.&#xA;Através da Grande Rede Mundial de computadores.&lt;/p&gt;&#xA;&lt;h3 id=&#34;quem-sou-eu&#34;&gt;Quem sou eu?&lt;/h3&gt;&#xA;&lt;p&gt;Meu nome é Arthur tenho no momento da criação deste post 23 anos.&lt;/p&gt;&#xA;&lt;p&gt;Sou um estudante de Ciências da Computação na &lt;a href=&#34;https://en.wikipedia.org/wiki/Federal_University_of_Lavras&#34;&gt;Universidade Federal de Lavras&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Tenho curiosidade em diversos assuntos, então você provavelmente vai me ver falando de assuntos:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Otaku&lt;/li&gt;&#xA;&lt;li&gt;Geek&lt;/li&gt;&#xA;&lt;li&gt;Nerd&lt;/li&gt;&#xA;&lt;li&gt;Gamer&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Sobre:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Eletrônica&lt;/li&gt;&#xA;&lt;li&gt;Economia&lt;/li&gt;&#xA;&lt;li&gt;Politica&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&amp;hellip; e por ai vai.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="bem-vindos-ao-foxtechworld">Bem vindos ao FoxTechWorld</h2>
<p>Este é um pequeno blog feito para distribuir conteúdo <a href="https://vaporhole.xyz/~kitsune">nérdico</a>.
Através da Grande Rede Mundial de computadores.</p>
<h3 id="quem-sou-eu">Quem sou eu?</h3>
<p>Meu nome é Arthur tenho no momento da criação deste post 23 anos.</p>
<p>Sou um estudante de Ciências da Computação na <a href="https://en.wikipedia.org/wiki/Federal_University_of_Lavras">Universidade Federal de Lavras</a>.</p>
<p>Tenho curiosidade em diversos assuntos, então você provavelmente vai me ver falando de assuntos:</p>
<ul>
<li>Otaku</li>
<li>Geek</li>
<li>Nerd</li>
<li>Gamer</li>
</ul>
<p>Sobre:</p>
<ul>
<li>Eletrônica</li>
<li>Economia</li>
<li>Politica</li>
</ul>
<p>&hellip; e por ai vai.</p>
<p>Enfim, bem vindos a este novo começo.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
